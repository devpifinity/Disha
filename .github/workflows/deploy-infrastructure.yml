name: Deploy Infrastructure

on:
  push:
    branches: [develop, main]
    paths:
      - 'infrastructure/cdk/**'
      - '.github/workflows/deploy-infrastructure.yml'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod
      action:
        description: 'CDK action to perform'
        required: true
        default: 'deploy'
        type: choice
        options:
          - deploy
          - diff
          - destroy
      branch:
        description: 'Branch to deploy from'
        required: false
        default: 'main'
        type: string

concurrency:
  group: deploy-infrastructure-${{ github.ref_name }}-${{ inputs.environment || (github.ref_name == 'main' && 'prod' || 'dev') }}
  cancel-in-progress: true

jobs:
  determine-environment:
    name: Determine Environment
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.env.outputs.environment }}
      should-deploy: ${{ steps.env.outputs.should-deploy }}
    steps:
      - name: Determine environment and deployment
        id: env
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "environment=${{ inputs.environment }}" >> $GITHUB_OUTPUT
            echo "should-deploy=true" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref_name }}" == "main" ]]; then
            echo "environment=prod" >> $GITHUB_OUTPUT
            echo "should-deploy=true" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref_name }}" == "develop" ]]; then
            echo "environment=dev" >> $GITHUB_OUTPUT
            echo "should-deploy=true" >> $GITHUB_OUTPUT
          else
            echo "environment=dev" >> $GITHUB_OUTPUT
            echo "should-deploy=false" >> $GITHUB_OUTPUT
          fi

  deploy-infrastructure:
    name: Deploy Infrastructure to ${{ needs.determine-environment.outputs.environment }}
    runs-on: ubuntu-latest
    needs: determine-environment
    if: needs.determine-environment.outputs.should-deploy == 'true'
    environment: ${{ needs.determine-environment.outputs.environment == 'prod' && 'production' || 'development' }}
    
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch || github.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ needs.determine-environment.outputs.environment == 'prod' && vars.AWS_ROLE_ARN_PROD || vars.AWS_ROLE_ARN_DEV }}
          role-session-name: GitHubActions-CDK-${{ needs.determine-environment.outputs.environment }}
          aws-region: us-east-1

      - name: Install CDK dependencies
        working-directory: infrastructure/cdk
        run: npm ci

      - name: Build CDK
        working-directory: infrastructure/cdk
        run: npm run build

      - name: CDK Bootstrap (if needed)
        working-directory: infrastructure/cdk
        run: |
          # Check if bootstrap is needed
          if ! aws cloudformation describe-stacks --stack-name CDKToolkit 2>/dev/null; then
            echo "Bootstrapping CDK..."
            npx cdk bootstrap -c environment=${{ needs.determine-environment.outputs.environment }}
          else
            echo "CDK already bootstrapped"
          fi

      - name: CDK Diff
        working-directory: infrastructure/cdk
        run: |
          echo "## Infrastructure Changes for ${{ needs.determine-environment.outputs.environment }} environment" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          npx cdk diff -c environment=${{ needs.determine-environment.outputs.environment }} >> $GITHUB_STEP_SUMMARY || true
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

      - name: CDK Deploy
        if: inputs.action != 'diff' && inputs.action != 'destroy'
        working-directory: infrastructure/cdk
        run: |
          npx cdk deploy --require-approval never -c environment=${{ needs.determine-environment.outputs.environment }}

      - name: CDK Destroy
        if: inputs.action == 'destroy'
        working-directory: infrastructure/cdk
        run: |
          npx cdk destroy --force -c environment=${{ needs.determine-environment.outputs.environment }}

      - name: Output Stack Information
        if: inputs.action != 'destroy'
        working-directory: infrastructure/cdk
        run: |
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: ${{ needs.determine-environment.outputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Stack Name**: disha-career-platform-${{ needs.determine-environment.outputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Region**: us-east-1" >> $GITHUB_STEP_SUMMARY
          echo "- **Deployed by**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          
          # Get stack outputs if available
          echo "## Stack Outputs" >> $GITHUB_STEP_SUMMARY
          aws cloudformation describe-stacks \
            --stack-name disha-career-platform-${{ needs.determine-environment.outputs.environment }} \
            --query 'Stacks[0].Outputs[*].[OutputKey,OutputValue]' \
            --output table >> $GITHUB_STEP_SUMMARY || echo "No stack outputs available" >> $GITHUB_STEP_SUMMARY