name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: deploy-prod
  cancel-in-progress: false

jobs:
  quality-checks:
    name: Quality Checks
    uses: ./.github/workflows/quality-checks.yml
    with:
      node-version: '18'

  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: quality-checks
    environment: production

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts-${{ github.sha }}
          path: dist/

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN_PROD }}
          role-session-name: GitHubActions-Deploy-Prod
          aws-region: us-east-1

      - name: Deploy to S3
        run: |
          aws s3 sync dist/ s3://${{ vars.S3_BUCKET_NAME_PROD }} \
            --delete \
            --cache-control "public,max-age=31536000,immutable" \
            --exclude "index.html" \
            --exclude "*.map"
          
          # Upload index.html with shorter cache for SPA routing
          aws s3 cp dist/index.html s3://${{ vars.S3_BUCKET_NAME_PROD }}/index.html \
            --cache-control "public,max-age=3600"

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ vars.CLOUDFRONT_DISTRIBUTION_ID_PROD }} \
            --paths "/*"

      - name: Create deployment tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          TAG_NAME="deploy-prod-$(date +'%Y%m%d-%H%M%S')"
          git tag $TAG_NAME
          git push origin $TAG_NAME

      - name: Deployment summary
        run: |
          echo "üöÄ Production deployment completed successfully!"
          echo "üìç Environment: Production"
          echo "üåê URL: ${{ vars.WEBSITE_URL_PROD }}"
          echo "üì¶ Bucket: ${{ vars.S3_BUCKET_NAME_PROD }}"
          echo "üîÑ Distribution: ${{ vars.CLOUDFRONT_DISTRIBUTION_ID_PROD }}"
          echo "üìù Commit: ${{ github.sha }}"
          echo "üë§ Deployed by: ${{ github.actor }}"
          echo "üè∑Ô∏è  Tagged as: deploy-prod-$(date +'%Y%m%d-%H%M%S')"

      - name: Notify deployment
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "‚úÖ Production deployment successful"
          else
            echo "‚ùå Production deployment failed"
            exit 1
          fi